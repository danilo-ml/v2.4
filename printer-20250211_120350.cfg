[include mmu/base/*.cfg]
[include mmu/optional/client_macros.cfg]

# This file contains common pin mappings for the BigTreeTech Kraken.
# To use this config, the firmware should be compiled for the STM32H723Z6 with a "128KiB bootloader"
# Enable "extra low-level configuration options" and select the "25MHz crystal" as clock reference

# after running "make", copy the generated "klipper/out/klipper.bin" file to a
# file named "firmware.bin" on an SD card and then restart the Kraken with that SD card.

# See docs/Config_Reference.md for a description of parameters.

## Voron Design VORON2 250/300/350mm BigTreeTech Kraken

## *** THINGS TO CHANGE/CHECK: ***
## MCU paths                            [mcu] section
## Thermistor types                     [extruder] and [heater_bed] sections - See https://www.klipper3d.org/Config_Reference.html#common-thermistors for common thermistor types
## Hotend heater pin                    [extruder] section
## Z Endstop Switch location            [safe_z_home] section
## Homing end position                  [gcode_macro G32] section
## Z Endstop Switch  offset for Z0      [stepper_z] section
## Stepper Z1 enable pin                [stepper_z1] section
## Probe points                         [quad_gantry_level] section
## Min & Max gantry corner postions     [quad_gantry_level] section
## PID tune                             [extruder] and [heater_bed] sections
## Probe pin                            [probe] section
## Fine tune E steps                    [extruder] section


# This file contains common pin mappings for the BIGTREETECH EBBCan
# Canbus board. To use this config, the firmware should be compiled for the
# STM32G0B1 with "8 MHz crystal" and "USB (on PA11/PA12)" or "CAN bus (on PB0/PB1)".
# The "EBB Can" micro-controller will be used to control the components on the nozzle.

# See docs/Config_Reference.md for a description of parameters.
[include mainsail.cfg]
[include KAMP_Settings.cfg]


[exclude_object]

[force_move]
enable_force_move: True

[mcu]
canbus_uuid:3ecbd9806e27


[mcu EBBCan]
canbus_uuid: 6b28dc16cec0

[temperature_sensor raspberry_pi]
sensor_type: temperature_host

[temperature_sensor MCU]
sensor_type: temperature_mcu

# [temperature_sensor EBB_NTC]
# #sensor_type: Generic 3950
# sensor_type: NTC 100K MGB18-104F39050L32
# sensor_type: ATC Semitec 104NT-4-R025H42G
# sensor_pin: EBBCan: PA3

[adxl345]
cs_pin: EBBCan: PB12
spi_software_sclk_pin: EBBCan: PB10
spi_software_mosi_pin: EBBCan: PB11
spi_software_miso_pin: EBBCan: PB2
axes_map: z,-y,x

[resonance_tester]
probe_points: 100, 100, 20
accel_chip: adxl345

[printer]
kinematics: corexy
max_velocity: 1000
max_accel: 6000           #Max 4000
max_z_velocity: 15          #Max 15 for 12V TMC Drivers, can increase for 24V
max_z_accel: 350
square_corner_velocity: 10

#####################################################################
#   X/Y Stepper Settings
#####################################################################

##  A Stepper - Back Right
##  Connected to Motor_2-S2
[stepper_x]
step_pin: PE5
dir_pin: PE4
enable_pin: !PE3
rotation_distance: 40
microsteps: 32
full_steps_per_rotation:200  #set to 400 for 0.9 degree stepper
endstop_pin: ^EBBCan: PB6
position_min: 0
position_endstop: 300
position_max: 300
homing_speed: 100  #Max 100
homing_retract_dist: 5
second_homing_speed: 5
homing_positive_dir: true

##  TMC2160 configuration
[tmc5160 stepper_x]
cs_pin: PD5
interpolate: false
spi_software_miso_pin: PC7
spi_software_mosi_pin: PC8
spi_software_sclk_pin: PC6
sense_resistor: 0.022
run_current: 0.800
stealthchop_threshold: 0
##  sensorless homing, plug in jumper on M2-DIAG
#diag1_pin: PF0


##  A Stepper - Front Right
##  Connected to Motor_1-S1
[stepper_x1]
step_pin: PE2
dir_pin: PE1
enable_pin: !PE0
rotation_distance: 40
microsteps: 32
full_steps_per_rotation:200  #set to 400 for 0.9 degree stepper

##  TMC2160 configuration
[tmc5160 stepper_x1]
cs_pin: PD4
interpolate: false
spi_software_miso_pin: PC7
spi_software_mosi_pin: PC8
spi_software_sclk_pin: PC6
sense_resistor: 0.022
run_current: 0.800
stealthchop_threshold: 0
##  sensorless homing, plug in jumper on M2-DIAG
#diag1_pin: PC15


##  B Stepper - Back Left
##  Connected to Motor_4-S4
[stepper_y]
step_pin: PB9
dir_pin: !PB8
enable_pin: !PB7
rotation_distance: 40
microsteps: 32
full_steps_per_rotation:200  #set to 400 for 0.9 degree stepper
endstop_pin: PC15
position_min: 0
position_endstop: 311
position_max: 311
homing_speed: 100  #Max 100
homing_retract_dist: 5
second_homing_speed: 5
homing_positive_dir: true

##  TMC2160 configuration
[tmc5160 stepper_y]
cs_pin: PD3
interpolate: false
spi_software_miso_pin: PC7
spi_software_mosi_pin: PC8
spi_software_sclk_pin: PC6
sense_resistor: 0.022
run_current: 0.800
stealthchop_threshold: 0


##  B Stepper - Front Left
##  Connected to Motor_3-S3
[stepper_y1]
step_pin: PC14
dir_pin: !PC13
enable_pin: !PE6
rotation_distance: 40
microsteps: 32
full_steps_per_rotation:200  #set to 400 for 0.9 degree stepper

##  TMC2160 configuration
[tmc5160 stepper_y1]
cs_pin: PD6
interpolate: false
spi_software_miso_pin: PC7
spi_software_mosi_pin: PC8
spi_software_sclk_pin: PC6
sense_resistor: 0.022
run_current: 0.800
stealthchop_threshold: 0
 
#####################################################################
#   Z Stepper Settings
#####################################################################

## Z0 Stepper - Front Left
##  Connected to Motor_8-S8
[stepper_z]
step_pin: PG15
dir_pin: PB6
enable_pin: !PG14
rotation_distance: 40
gear_ratio: 80:16
microsteps: 32
endstop_pin: probe: z_virtual_endstop
position_min: -3
position_max: 260
homing_speed: 8
second_homing_speed: 3
homing_retract_dist: 3

[tmc5160 stepper_z]
cs_pin: PA10
spi_software_sclk_pin: PC6
spi_software_mosi_pin: PC8
spi_software_miso_pin: PC7
sense_resistor: 0.075
run_current: 0.800
stealthchop_threshold: 0

##  Z1 Stepper - Rear Left
##  Connected to Motor_7-S7
[stepper_z1]
step_pin: PB4
dir_pin: !PB3
enable_pin: !PB5
rotation_distance: 40
gear_ratio: 80:16
microsteps: 32

[tmc5160 stepper_z1]
cs_pin: PA9
spi_software_sclk_pin: PC6
spi_software_mosi_pin: PC8
spi_software_miso_pin: PC7
sense_resistor: 0.075
run_current: 0.800
stealthchop_threshold: 0

##  Z2 Stepper - Rear Right
##  Connected to Motor_6-S6
[stepper_z2]
step_pin: PG11
dir_pin: PD7
enable_pin: !PG12
rotation_distance: 40
gear_ratio: 80:16
microsteps: 32

##  TMC2160 configuration
[tmc5160 stepper_z2]
cs_pin: PA15
interpolate: false
spi_software_miso_pin: PC7
spi_software_mosi_pin: PC8
spi_software_sclk_pin: PC6
sense_resistor: 0.075
run_current: 0.800
stealthchop_threshold: 0

##  Z3 Stepper - Front Right
##  Connected to Motor_5-S5
[stepper_z3]
step_pin: PG9
dir_pin: !PG10
enable_pin: !PG13
rotation_distance: 40
gear_ratio: 80:16
microsteps: 32

##  TMC2160 configuration
[tmc5160 stepper_z3]
cs_pin: PD2
interpolate: false
spi_software_miso_pin: PC7
spi_software_mosi_pin: PC8
spi_software_sclk_pin: PC6
sense_resistor: 0.075
run_current: 0.800
stealthchop_threshold: 0


#####################################################################
#   Extruder
#####################################################################

[extruder]
step_pin: EBBCan: PD0
dir_pin: EBBCan: PD1
enable_pin: !EBBCan: PD2
rotation_distance: 47.088
gear_ratio: 9:1
microsteps: 16
nozzle_diameter: 0.400
filament_diameter: 1.750
heater_pin: EBBCan: PB13
min_temp: 0
max_temp: 350
max_extrude_only_distance: 500
sensor_type: NTC 100K MGB18-104F39050L32 #ATC Semitec 104NT-4-R025H42G #MAX31865
sensor_pin: EBBCan: PA3 #EBBCan: PA4
#spi_bus: spi1
# rtd_nominal_r: 100
# rtd_reference_r: 430
# rtd_num_of_wires: 2
pressure_advance=0.04

[tmc2209 extruder]
uart_pin: EBBCan: PA15
run_current: 0.600
stealthchop_threshold: 0


# [filament_switch_sensor filament_sensor1]
# pause_on_runout: True
# pause_delay: 0.01
# switch_pin: ~EBBCan: PB7
# runout_gcode:
#   M600
# insert_gcode:
#   LOAD_FILAMENT

# [filament_switch_sensor filament_sensor2]
# pause_on_runout: True
# pause_delay: 0.01
# switch_pin: ^EBBCan: PB5
# runout_gcode:
#   M600
#   CONDITIONAL_BEEP i=3 dur=300 freq=400
# insert_gcode:
#   LOAD_FILAMENT

#####################################################################
#   Bed Heater
#####################################################################

##  SSR Pin - HE1
##  Thermistor - THB
[heater_bed]
heater_pin: PF6
sensor_type: Generic 3950
sensor_pin: PB0
##  Adjust max_power so it doesn't exceed the SSR rating. The Omron G3NA-210B-DC5 SSR is rated at 4 amps without a heatsink.
##  The formula is "4 / (Wattage_of_bed_heater / Mains_voltage) = max_power"
##  If max_power is greater than 1.0, use 1.0
max_power:1.0
min_temp: 0
max_temp: 125
control: pid
pid_kp: 58.437
pid_ki: 2.347
pid_kd: 363.769
pwm_cycle_time: 0.01666666

#####################################################################
#   Probe
#####################################################################

##  Inductive Probe - IND-DET
##  This probe is not used for Z height, only Quad Gantry Leveling
[probe]
pin: ^!EBBCan: PB8
x_offset: 0
y_offset: 0
#z_offset: -0.965
speed: 10.0
samples: 2
samples_result: median
sample_retract_dist: 0.8
samples_tolerance: 0.006
samples_tolerance_retries: 3
activate_gcode:
    {% set PROBE_TEMP = 170 %}
    {% set MAX_TEMP = PROBE_TEMP + 10 %}
    {% set ACTUAL_TEMP = printer.extruder.temperature %}
    {% set TARGET_TEMP = printer.extruder.target %}

    {% if TARGET_TEMP > PROBE_TEMP %}
        { action_respond_info('Extruder temperature target of %.1fC is too high, lowering to %.1fC' % (TARGET_TEMP, PROBE_TEMP)) }
        M106 S128
        M109 S{ PROBE_TEMP }
        M106 S0
    {% else %}
        # Temperature target is already low enough, but nozzle may still be too hot.
        {% if ACTUAL_TEMP > MAX_TEMP %}
            { action_respond_info('Extruder temperature %.1fC is still too high, waiting until below %.1fC' % (ACTUAL_TEMP, MAX_TEMP)) }
            M106 S128
            TEMPERATURE_WAIT SENSOR=extruder MAXIMUM={ MAX_TEMP }
            M106 S0
        {% endif %}
    {% endif %}

#####################################################################
#   Fan Control
#####################################################################

##  Print Cooling Fan - FAN0
[fan]
pin: PE7
kick_start_time: 0.5
cycle_time: 0.002
##  Depending on your fan, you may need to increase this value
##  if your fan will not start. Can change cycle_time (increase)
##  if your fan is not able to slow down effectively
#off_below: 0


##  Hotend Fan - FAN1
[heater_fan hotend_fan]
pin: EBBCan: PA0
max_power: 1.0
kick_start_time: 0.5
heater: extruder
heater_temp: 50.0
##  If you are experiencing back flow, you can reduce fan_speed
#fan_speed: 1.0


[temperature_fan drivers]
pin: PA1
max_power: 0.7
kick_start_time: 0.5
shutdown_speed: 0.0
sensor_type: temperature_host
target_temp: 55.0
min_temp: -50
max_temp: 100
control: pid
min_speed: 0.30
max_speed: 1.0
pid_Kp: 40
pid_Ki: 0.2
pid_Kd: 0.1
off_below: 0.15


[duplicate_pin_override]
pins: PB0

[temperature_fan nevermore]
pin: PA0
max_power: 1.0
kick_start_time: 0.5
shutdown_speed: 0.0
min_temp: -50
max_temp: 200
sensor_pin: PB0
sensor_type: Generic 3950
target_temp: 65
control: pid
min_speed: 0
max_speed: 1.0
pid_Kp: 40
pid_Ki: 0.2
pid_Kd: 0.1
off_below: 0.15

[temperature_sensor chamber]
sensor_type: Generic 3950
sensor_pin: PB1

#####################################################################
#   LED Control
#####################################################################

# [multi_pin leds]
# pins: PF12, PF11
# #   A comma separated list of pins associated with this alias. This
# #   parameter must be provided.

[neopixel toolhead]
pin: EBBCan: PD3
chain_count: 3
color_order: GRB
initial_RED: 0.5
initial_GREEN: 0.5
initial_BLUE: 0.5

[neopixel rainbow_bar1]
pin: PF12
chain_count: 18
color_order: GRB
initial_RED: 0.5
initial_GREEN: 0.5
initial_BLUE: 0.5

[neopixel rainbow_bar2]
pin: PF11
chain_count: 18
color_order: GRB
initial_RED: 0.5
initial_GREEN: 0.5
initial_BLUE: 0.5

#####################################################################
#   Homing and Gantry Adjustment Routines
#####################################################################

[idle_timeout]
timeout: 6000

[safe_z_home]
##  XY Location of the Z Endstop Switch
##  Update -10,-10 to the XY coordinates of your endstop pin 
##  (such as 157,305) after going through Z Endstop Pin
##  Location Definition step.
home_xy_position: 150, 150
speed: 500
z_hop: 5


##  Use QUAD_GANTRY_LEVEL to level a gantry.
##  Min & Max gantry corners - measure from nozzle at MIN (0,0) and 
##  MAX (250, 250), (300,300), or (350,350) depending on your printer size
##  to respective belt positions
[quad_gantry_level]
gantry_corners:
  -60,-10
  360,370
#  Probe points
points:
  25,25
  25,275
  275,275
  275,25
speed: 500
horizontal_move_z: 5
retries: 10
retry_tolerance: 0.0075
max_adjust: 10

[bed_mesh]
speed: 500
horizontal_move_z: 1
mesh_min: 25, 25
mesh_max: 275, 275
probe_count: 7, 7
algorithm: bicubic
bicubic_tension: .2

########################################
# EXP1 / EXP2 (display) pins
########################################

[board_pins]
aliases:
    # EXP1 header
    EXP1_1=PG5, EXP1_2=PG4,
    EXP1_3=PG3, EXP1_4=PG2,
    EXP1_5=PD15, EXP1_6=PD14,
    EXP1_7=PD13, EXP1_8=PD12,
    EXP1_9=<GND>, EXP1_10=<5V>,

    # EXP2 header
    EXP2_1=PE13, EXP2_2=PE12,
    EXP2_3=PG8, EXP2_4=PE11,
    EXP2_5=PG7, EXP2_6=PE14,
    EXP2_7=PG6, EXP2_8=<RST>,
    EXP2_9=<GND>, EXP2_10=<NC>


#####################################################################
#   Macros
#####################################################################


[gcode_macro PRINT_START]
gcode:
    {% set BED_TEMP = params.BED_TEMP|default(0)|float %}
    {% set EXTRUDER_TEMP = params.EXTRUDER_TEMP|default(0)|float %}
    {% set ACTUAL_TEMP = printer.extruder.temperature %}
    {% set PROBE_TEMP = 170 %}
    # Use absolute coordinates
    #DUMP_VARIABLES
    G90
    G92 E0
    # Wait for bed to reach temperature
    M190 S{BED_TEMP}
    {% if ACTUAL_TEMP > PROBE_TEMP %}
        M106 S128
        M109 S{ PROBE_TEMP }
        M106 S0
    {% else %}
        # Temperature target is already low enough, but nozzle may still be too hot.
        {% if ACTUAL_TEMP <= PROBE_TEMP %}
            M104 S170
        {% endif %}
    {% endif %}
    # Home the printer
    _CG28
    CLEAN_NOZZLE
    _CQGL
    BED_MESH_CALIBRATE
    G28 Z
    # Move the nozzle near the bed
    G1 Z5 F3000
    # Set and wait for nozzle to reach temperature
    M104 S{EXTRUDER_TEMP}
    MMU_START_CHECK
    M109 S{EXTRUDER_TEMP}
    # G91
    # G1 E45 F600
    MMU_START_LOAD_INITIAL_TOOL
    #VORON_PURGE
    LINE_PURGE
    #DUMP_VARIABLES

[gcode_macro PRINT_END]
gcode:
    G91
    G1 Z10 F1500
    MMU_END
    G90
    G1 X290 Y300 F18000
    M106 S0
    SET_STEPPER_ENABLE STEPPER=extruder ENABLE=0
    BED_MESH_CLEAR
    TURN_OFF_HEATERS

[gcode_macro _CG28]
gcode:
    {% if "xyz" not in printer.toolhead.homed_axes %}
        G28
    {% endif %}

[gcode_macro _CQGL]
gcode:
    {% if printer.quad_gantry_level.applied == False %}
        {% if "xyz" not in printer.toolhead.homed_axes %}
            G28 ; home if not already homed
        {% endif %}
        QUAD_GANTRY_LEVEL
        G28 Z
    {% endif %}


[gcode_macro EXTRUDER_OFF]
gcode:
    SET_STEPPER_ENABLE STEPPER=extruder ENABLE=0 

[gcode_macro CLEAN_NOZZLE]
#description: Limpa o bico movendo entre duas posições
gcode:
    {% set moves = 7 %}  # Número de movimentos
    {% set temp = 170 %}  # Temperatura para fazer o probe
    {% set pos_home = (250, 292) %}  # Posição inicial (X, Y)
    #{% set pos_brush = (233, 310, 7.3) %}  # Posição inicial (X, Y, Z)
    {% set pos_brush = (233, 310, 5.8) %}  # Posição inicial (X, Y, Z)
    {% set pos_x_min = 233 %}  # Posição minima pra movimento no (X)
    {% set pos_x_max = 270 %}  # Posição minima pra movimento no (X)
    {% set ACTUAL_TEMP = printer.extruder.temperature %}

    G90 
    # Mover para a posição inicial
    G0 X{pos_home[0]} Y{pos_home[1]} F30000
    # Engana o firmware para conseguir fazer o home do Z novamente
    SET_KINEMATIC_POSITION X=150 Y=150
    # Seta a temperatura do bico para a temperatura de probe
    {% if ACTUAL_TEMP > temp %}
        M104 S{ ACTUAL_TEMP }
    {% else %}
        # Temperature target is already low enough, but nozzle may still be too hot.
        {% if ACTUAL_TEMP <= temp %}
            M109 S{ temp }
        {% endif %}
    {% endif %}
    #M109 S{temp}
    # Faz home do Z
    G28 Z0
    # Volta a posição atual para a verdadeira
    SET_KINEMATIC_POSITION X={pos_home[0]} Y={pos_home[1]}
    G90
    G0 X{pos_brush[0]} Y{pos_brush[1]} Z{pos_brush[2]} F30000
    # Loop para mover entre as posições
    {% for i in range(moves) %}
        G0 X{pos_x_min} F12000  # Mover para a posição 2
        G0 X{pos_x_max} F12000  # Mover de volta para a posição 1
    {% endfor %}
    G0 X{pos_home[0]} Y{pos_home[1]} F30000

    
[gcode_macro PAUSE]
rename_existing: BASE_PAUSE
gcode:
    # Parameters
    {% set z = params.Z|default(10)|int %}                                                   ; z hop amount

    {% if printer['pause_resume'].is_paused|int == 0 %}
        SET_GCODE_VARIABLE MACRO=RESUME VARIABLE=zhop VALUE={z}                              ; set z hop variable for reference in resume macro
        SET_GCODE_VARIABLE MACRO=RESUME VARIABLE=etemp VALUE={printer['extruder'].target}    ; set hotend temp variable for reference in resume macro

        SAVE_GCODE_STATE NAME=PAUSE                                                          ; save current print position for resume
        BASE_PAUSE                                                                           ; pause print
        {% if (printer.gcode_move.position.z + z) < printer.toolhead.axis_maximum.z %}       ; check that zhop doesn't exceed z max
            G91                                                                              ; relative positioning
            G1 Z{z} F900                                                                     ; raise Z up by z hop amount
        {% else %}
            { action_respond_info("Pause zhop exceeds maximum Z height.") }                  ; if z max is exceeded, show message and set zhop value for resume to 0
            SET_GCODE_VARIABLE MACRO=RESUME VARIABLE=zhop VALUE=0
        {% endif %}
        G90                                                                                  ; absolute positioning
        G1 X{printer.toolhead.axis_maximum.x-50} Y{printer.toolhead.axis_minimum.y+5} F9000   ; park toolhead at front center
        SAVE_GCODE_STATE NAME=PAUSEPARK                                                      ; save parked position in case toolhead is moved during the pause (otherwise the return zhop can error)
        SET_IDLE_TIMEOUT TIMEOUT=43200                                                       ; set timeout to 12 hours
    {% endif %}

[gcode_macro RESUME]
rename_existing: BASE_RESUME
variable_zhop: 0
variable_etemp: 0
gcode:
    # Parameters
    {% set e = params.E|default(2.5)|int %}                                          ; hotend prime amount (in mm)

    {% if printer['pause_resume'].is_paused|int == 1 %}
        #INITIAL_RGB                                                                    ; reset LCD color
        SET_IDLE_TIMEOUT TIMEOUT={printer.configfile.settings.idle_timeout.timeout}  ; set timeout back to configured value
        RESTORE_GCODE_STATE NAME=PAUSEPARK MOVE=1 MOVE_SPEED=100                     ; go back to parked position in case toolhead was moved during pause (otherwise the return zhop can error)
        G91                                                                          ; relative positioning
        M83                                                                          ; relative extruder positioning
        G1 E{e} F900                                                                 ; prime nozzle by E, lower Z back down
        RESTORE_GCODE_STATE NAME=PAUSE MOVE=1 MOVE_SPEED=60                          ; restore position
        BASE_RESUME                                                                  ; resume print
    {% endif %}
    

[gcode_macro CANCEL_PRINT]
rename_existing: BASE_CANCEL_PRINT
gcode:
    SET_IDLE_TIMEOUT TIMEOUT={printer.configfile.settings.idle_timeout.timeout} ; set timeout back to configured value
    CLEAR_PAUSE
    SDCARD_RESET_FILE
    PRINT_END
    BASE_CANCEL_PRINT
    M106 S0
    MMU__EJECT
    SET_STEPPER_ENABLE STEPPER=extruder ENABLE=0



[gcode_macro M600]
gcode:
    SAVE_GCODE_STATE NAME=M600_state
    PAUSE
    M300
    G91
    G1 E-80 F1000
    M300
    RESTORE_GCODE_STATE NAME=M600_state

#*# <---------------------- SAVE_CONFIG ---------------------->
#*# DO NOT EDIT THIS BLOCK OR BELOW. The contents are auto-generated.
#*#
#*# [extruder]
#*# control = pid
#*# pid_kp = 23.792
#*# pid_ki = 10.574
#*# pid_kd = 13.383
#*#
#*# [bed_mesh default]
#*# version = 1
#*# points =
#*# 	-0.050000, -0.086875, -0.011875, 0.121250, 0.155625, 0.005625, -0.048125
#*# 	-0.071875, -0.146250, -0.102500, -0.009375, -0.002500, -0.071875, -0.080000
#*# 	-0.073125, -0.160000, -0.139375, -0.088750, -0.075625, -0.116250, -0.111250
#*# 	-0.081875, -0.155000, -0.133125, -0.095000, -0.101875, -0.119375, -0.131250
#*# 	-0.087500, -0.123750, -0.102500, -0.058125, -0.076250, -0.113750, -0.130625
#*# 	-0.088125, -0.124375, -0.047500, 0.037500, -0.015625, -0.084375, -0.095625
#*# 	-0.035625, -0.041250, 0.045000, 0.163125, 0.090000, -0.021875, -0.061875
#*# x_count = 7
#*# y_count = 7
#*# mesh_x_pps = 2
#*# mesh_y_pps = 2
#*# algo = bicubic
#*# tension = 0.2
#*# min_x = 25.0
#*# max_x = 269.5
#*# min_y = 25.0
#*# max_y = 273.46
#*#
#*# [input_shaper]
#*# shaper_type_x = mzv
#*# shaper_freq_x = 69.2
#*# shaper_type_y = mzv
#*# shaper_freq_y = 53.2
#*#
#*# [probe]
#*# z_offset = -0.995
